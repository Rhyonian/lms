version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: lms-postgres
    restart: unless-stopped
    env_file:
      - ./env/postgres.env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lms} -d ${POSTGRES_DB:-lms}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: lms-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    env_file:
      - ./env/redis.env
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-01-11T07-46-16Z
    container_name: lms-minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT:-9001}"
    restart: unless-stopped
    env_file:
      - ./env/minio.env
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../..
      dockerfile: ${API_DOCKERFILE:-infra/docker/api.Dockerfile}
    container_name: lms-api
    restart: unless-stopped
    env_file:
      - ./env/api.env
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - ../../:/app
    command:
      - sh
      - -c
      - "${API_CMD:-sleep infinity}"

  worker:
    build:
      context: ../..
      dockerfile: ${WORKER_DOCKERFILE:-infra/docker/worker.Dockerfile}
    container_name: lms-worker
    restart: unless-stopped
    env_file:
      - ./env/worker.env
    depends_on:
      api:
        condition: service_started
    volumes:
      - ../../:/app
    command:
      - sh
      - -c
      - "${WORKER_CMD:-sleep infinity}"

  web:
    build:
      context: ../..
      dockerfile: ${WEB_DOCKERFILE:-infra/docker/web.Dockerfile}
    container_name: lms-web
    restart: unless-stopped
    env_file:
      - ./env/web.env
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ../../:/app
    command:
      - sh
      - -c
      - "${WEB_CMD:-sleep infinity}"

volumes:
  postgres_data:
  redis_data:
  minio_data:
